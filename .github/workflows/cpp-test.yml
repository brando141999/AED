name: C++ CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      actions: write
      contents: read

    steps:
      # Paso 1: Clonar el repositorio
      - name: Check out repository
        uses: actions/checkout@v3

      # Paso 2: Instalar dependencias
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake libgtest-dev jq libxml2-utils

      # Paso 3: Construir el proyecto con CMake
      - name: Build project
        run: |
          mkdir -p build
          cd build
          cmake ..
          make

      # Paso 4: Ejecutar pruebas y generar informes en formato XML
      - name: Run tests and generate reports
        run: |
          cd build
          ctest --output-on-failure --tests-regex . --verbose

      # Paso 5: Publicar los reportes de pruebas individuales
      - name: Publish individual test reports
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Si es un fork, usa un PAT
        run: |
          cd build
          REPORTS=$(find . -name "*.xml")

          for REPORT in $REPORTS; do
            SUITE_NAME=$(basename "$REPORT" .xml)
            FAILURES=$(xmllint --xpath 'string(//testsuite/@failures)' "$REPORT" 2>/dev/null || echo "0")
            ERRORS=$(xmllint --xpath 'string(//testsuite/@errors)' "$REPORT" 2>/dev/null || echo "0")
          
            CONCLUSION="success"
            if [ "$FAILURES" -gt 0 ] || [ "$ERRORS" -gt 0 ]; then
              CONCLUSION="failure"
            fi

            gh api repos/${{ github.repository }}/check-runs \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -f name="Test Suite: $SUITE_NAME" \
              -f status="completed" \
              -f conclusion="$CONCLUSION" \
              -f output="$(jq -n \
                --arg title "$SUITE_NAME Test Results" \
                --arg summary "$(xmllint --xpath '//testsuite/@name' "$REPORT" 2>/dev/null || echo "$SUITE_NAME")" \
                --arg text "$(cat $REPORT)" \
                '{title: $title, summary: $summary, text: $text}')"
          done
