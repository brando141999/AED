name: C++ CI with JUnit Report

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out repository
      - name: Check out repository
        uses: actions/checkout@v2

      # 2. Install dependencies (GTest, CMake)
      - name: Install dependencies
        run: sudo apt-get install -y g++ cmake libgtest-dev

      # 3. Build the project
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ..
          make

      # 4. Run ForwardList tests and generate JUnit XML report
      - name: Run ForwardList tests
        run: |
          mkdir -p test-reports
          cd build
          ./test_ForwardList --gtest_output=xml:../test-reports/forwardlist.xml

      # 5. Run CircularDLL tests and generate JUnit XML report
      - name: Run CircularDLL tests
        run: |
          cd build
          ./test_CircularDLL --gtest_output=xml:../test-reports/circulardll.xml

      # 6. Run BinarySearchTree tests and generate JUnit XML report
      - name: Run BinarySearchTree tests
        run: |
          cd build
          ./test_BinarySearchTree --gtest_output=xml:../test-reports/binarysearchtree.xml

      # 7. Run HashSet tests and generate JUnit XML report
      - name: Run HashSet tests
        run: |
          cd build
          ./test_HashSet --gtest_output=xml:../test-reports/hashset.xml

      # 8. Upload JUnit report as an artifact to GitHub
      - name: Upload JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: test-reports/*.xml

      # 9. Display the JUnit report in GitHub Actions
      - name: Display JUnit report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: test-reports/*.xml

      # 10. Upload Allure Report (optional)
      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          curl -sL https://github.com/allure-framework/allure2/releases/download/2.20.0/allure-2.20.0.tgz | tar -xz
          sudo mv allure-2.20.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      # 11. Generate Allure Report (optional)
      - name: Generate Allure Report
        run: |
          allure generate test-reports -o allure-report

      # 12. Upload Allure Report as artifact (optional)
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
